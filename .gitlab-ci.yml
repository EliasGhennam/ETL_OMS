stages:
  - lint
  - test
  - analyze
  - package
  - docker

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"
  PACKAGE_NAME: "mon_projet"
  PACKAGE_VERSION: "0.1.0"
  IMAGE_NAME: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"

lint:
  stage: lint
  image: python:3.9
  script:
    - pip install pylint
    - pylint *.py || true

  allow_failure: false

test:
  stage: test
  image: python:3.9
  script:
    - pip install pytest
    - pytest tests/
  allow_failure: false

sonarcloud:
  stage: analyze
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  script:
    - sonar-scanner
  only:
    - merge_requests
    - master
    - develop
  variables:
    SONAR_TOKEN: $SONAR_TOKEN
    SONAR_HOST_URL: $SONAR_HOST_URL

trivy_scan:
  stage: analyze
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
    TRIVY_CACHE_DIR: ".trivycache/"
  before_script:
    - apk add --no-cache curl
    - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
  script:
    - docker build -t $IMAGE_NAME .
    - trivy image --exit-code 0 --severity HIGH $IMAGE_NAME
    - trivy image --exit-code 1 --severity CRITICAL $IMAGE_NAME
  artifacts:
    paths:
      - gl-container-scanning-report.json
    reports:
      container_scanning: gl-container-scanning-report.json
  allow_failure: true

package:
  stage: package
  image: python:3.9
  script:
    - pip install setuptools wheel
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz

docker_build:
  stage: docker
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t $IMAGE_NAME .
    - docker push $IMAGE_NAME
  only:
    - master
